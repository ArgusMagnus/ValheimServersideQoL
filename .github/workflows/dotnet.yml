# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true
        token: ${{ secrets.DEP_ACCESS_TOKEN }}

    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v4
    #   with:
    #     dotnet-version: 8.0.x
    # - name: Restore dependencies
    #   run: dotnet restore
    - name: Build
      run: dotnet build -c Release
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal
          
  publish:

    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v') # works only version tagged
    needs: [build]
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true
        token: ${{ secrets.DEP_ACCESS_TOKEN }}
    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: 7.0.x
    - name: Build
      run: |
        $version = '${{ github.ref }}'.Substring(11)
        dotnet build -c Release -o ./publish/bin -p:Version=$version
        Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$version" -Encoding UTF8
        $manifest = Get-Content -LiteralPath ./publish/bin/manifest.json -Raw | ConvertFrom-Json
        Add-Content -Path $env:GITHUB_ENV -Value "MOD_NAME=$($manifest.name)" -Encoding UTF8
        Add-Content -Path $env:GITHUB_ENV -Value "MOD_DESC=$($manifest.description)" -Encoding UTF8
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/Valheim.ServersideQoL.zip
        asset_name: Valheim.ServersideQoL-v${{ env.VERSION }}.zip
        asset_content_type: application/zip
        
    - name: Publish package to Thunderstore
      uses: GreenTF/upload-thunderstore-package@v4.3
      with:
        namespace: ArgusMagnus
        description: ${{ env.MOD_DESC }}
        token: ${{ secrets.THUNDERSTORE_TOKEN }}
        name: ${{ env.MOD_NAME }}
        version: ${{ env.VERSION }}
        community: valheim
        repo: https://thunderstore.io/c/valheim/
        file: ./publish/Valheim.ServersideQoL.zip
        categories: |
          bog-witch-update
          server-side

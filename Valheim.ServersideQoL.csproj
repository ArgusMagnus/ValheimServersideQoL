<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net48</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>embedded</DebugType>
    <ValheimDir>$(USERPROFILE)\Games\valheim\</ValheimDir>
    <Version>0.0.0</Version>
  </PropertyGroup>

  <ItemGroup>
    <RequiredReference Include="assembly_utils">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\assembly_utils.dll</HintPath>
    <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="assembly_valheim">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\assembly_valheim.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="assembly_guiutils">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\assembly_guiutils.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="BepInEx">
      <HintPath>$(ValheimDir)BepInEx\core\BepInEx.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="UnityEngine">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="UnityEngine.CoreModule">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="0Harmony">
      <HintPath>$(ValheimDir)BepInEx\core\0Harmony.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
  </ItemGroup>
  
  <ItemGroup Condition="'$(Configuration)' != 'Debug'">
    <Reference Include="@(RequiredReference)" HintPath="Dependencies\%(RequiredReference.HintPath.Filename)" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Debug'">
  <Reference Include="@(RequiredReference)" />
    <Reference Include="BepInEx.Harmony">
      <HintPath>$(ValheimDir)BepInEx\core\BepInEx.Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="BepInEx.Preloader">
      <HintPath>$(ValheimDir)BepInEx\core\BepInEx.Preloader.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="HarmonyXInterop">
      <HintPath>$(ValheimDir)BepInEx\core\HarmonyXInterop.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Mdb">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.Mdb.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Pdb">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.Pdb.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Rocks">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.Rocks.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="MonoMod.RuntimeDetour">
      <HintPath>$(ValheimDir)BepInEx\core\MonoMod.RuntimeDetour.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="MonoMod.Utils">
      <HintPath>$(ValheimDir)BepInEx\core\MonoMod.Utils.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\UnityEngine.PhysicsModule.dll</HintPath>
    <Private>False</Private>
  </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Update="icon.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="manifest.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="README.md">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="GenerateBuildInfo" BeforeTargets="CoreCompile">
    <PropertyGroup>
      <BuildInfoFile>$(IntermediateOutputPath)BuildInfo.cs</BuildInfoFile>
      <MyTextLines>
namespace $(RootNamespace)%3B

partial class Main
{
    const string PluginVersion = "$(Version)"%3B
}
      </MyTextLines> 
    </PropertyGroup>
    
    <WriteLinesToFile File="$(BuildInfoFile)" Overwrite="true" Lines="$(MyTextLines)" />

    <ItemGroup>
      <Compile Include="$(BuildInfoFile)" />
    </ItemGroup>
  </Target>
  
  <Target Name="CopyDependencies" AfterTargets="AfterBuild" Condition="'$(Configuration)' == 'Debug'">
    <ItemGroup>
      <FilesToDelete Include="Dependencies/**/*.dll" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <Copy SourceFiles="%(RequiredReference.HintPath)" DestinationFolder="Dependencies" />
  </Target>

  <Target Name="CreatePackage" AfterTargets="AfterBuild">
    <Exec Command="powershell -ExecutionPolicy ByPass -File Update-Manifest.ps1 -Path $(OutDir)manifest.json -Version $(Version)" />
    <ZipDirectory SourceDirectory="$(OutDir)" DestinationFile="$(OutDir)..\$(TargetName).zip" Overwrite="true" />
  </Target>

</Project>

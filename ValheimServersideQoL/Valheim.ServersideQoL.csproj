<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--<TargetFramework>net48</TargetFramework>-->
    <TargetFramework>netstandard2.1</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <DebugSymbols>false</DebugSymbols>
    <DebugType>none</DebugType>
	<MinVerTagPrefix>v</MinVerTagPrefix>
	<MinVerDefaultPreReleaseIdentifiers>beta.0</MinVerDefaultPreReleaseIdentifiers>
    <ValheimDir>$(USERPROFILE)\Games\valheim\</ValheimDir>
  </PropertyGroup>
	
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>embedded</DebugType>	  
  </PropertyGroup>

  <ItemGroup>
	<PackageReference Include="MinVer" Version="6.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ValheimServersideQoL.YamlDotNet\YamlDotNet\Valheim.ServersideQoL.YamlDotNet.csproj" />
  </ItemGroup>
	
  <ItemGroup>
    <Compile Remove="Dependencies\**" />
	<None Include="Dependencies\**" />
  </ItemGroup>

  <ItemGroup>
    <RequiredReference Include="assembly_utils">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\assembly_utils.dll</HintPath>
    <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="assembly_valheim">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\assembly_valheim.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="assembly_guiutils">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\assembly_guiutils.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="BepInEx">
      <HintPath>$(ValheimDir)BepInEx\core\BepInEx.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="UnityEngine">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="UnityEngine.CoreModule">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="0Harmony">
      <HintPath>$(ValheimDir)BepInEx\core\0Harmony.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="Mono.Cecil">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="MonoMod.Utils">
      <HintPath>$(ValheimDir)BepInEx\core\MonoMod.Utils.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
    <RequiredReference Include="SoftReferenceableAssets">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\SoftReferenceableAssets.dll</HintPath>
      <Private>False</Private>
    </RequiredReference>
  </ItemGroup>
  
  <ItemGroup Condition="'$(Configuration)' != 'Debug'">
    <Reference Include="@(RequiredReference)" HintPath="Dependencies\%(RequiredReference.HintPath.Filename)" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Debug'">
  <Reference Include="@(RequiredReference)" />
    <Reference Include="BepInEx.Harmony">
      <HintPath>$(ValheimDir)BepInEx\core\BepInEx.Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="BepInEx.Preloader">
      <HintPath>$(ValheimDir)BepInEx\core\BepInEx.Preloader.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="HarmonyXInterop">
      <HintPath>$(ValheimDir)BepInEx\core\HarmonyXInterop.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Mdb">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.Mdb.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Pdb">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.Pdb.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Rocks">
      <HintPath>$(ValheimDir)BepInEx\core\Mono.Cecil.Rocks.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="MonoMod.RuntimeDetour">
      <HintPath>$(ValheimDir)BepInEx\core\MonoMod.RuntimeDetour.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\UnityEngine.PhysicsModule.dll</HintPath>
      <Private>False</Private>
	</Reference>
    <Reference Include="Splatform">
      <HintPath>$(ValheimDir)valheim_server_Data\Managed\Splatform.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Update="icon.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="README.md">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="CHANGELOG.md">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="GenerateBuildInfo" BeforeTargets="CoreCompile">
    <PropertyGroup>
	  <VersionNumber>$(Version.Split('-')[0])</VersionNumber>
      <BuildInfoFile>$(IntermediateOutputPath)BuildInfo.cs</BuildInfoFile>
      <MyTextLines>
namespace $(RootNamespace)%3B

partial class Main
{
    const string PluginVersion = "$(VersionNumber)"%3B
    internal const string PluginInformationalVersion = "$(Version)"%3B
#if DEBUG
    const string ConfigMarkdownPath = @"$(ProjectDir)Configuration.md"%3B
#endif
}
      </MyTextLines> 
    </PropertyGroup>
    
    <WriteLinesToFile File="$(BuildInfoFile)" Overwrite="true" Lines="$(MyTextLines)" />

    <ItemGroup>
      <Compile Include="$(BuildInfoFile)" />
    </ItemGroup>
  </Target>
  
  <Target Name="CopyDependencies" AfterTargets="AfterBuild" Condition="'$(Configuration)' == 'Debug'">
    <ItemGroup>
      <FilesToDelete Include="Dependencies/**/*.dll" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <Copy SourceFiles="%(RequiredReference.HintPath)" DestinationFolder="Dependencies" />
  </Target>

  <Target Name="CreatePackage" AfterTargets="AfterBuild">	
	<Exec Command="powershell -ExecutionPolicy ByPass -Command &quot;Add-Content -LiteralPath '$(OutDir)README.md' -Encoding UTF8 -Value (Get-Content Configuration.md -Encoding UTF8)&quot;" />	  
    <Exec Command="powershell -ExecutionPolicy ByPass -File Write-Manifest.ps1 -Path $(OutDir)manifest.json -Version $(Version) -VersionNumber $(VersionNumber)" />
    <ZipDirectory SourceDirectory="$(OutDir)" DestinationFile="$(OutDir)..\$(TargetName).zip" Overwrite="true" />
  </Target>

</Project>
